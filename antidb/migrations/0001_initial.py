# Generated by Django 2.0.5 on 2018-09-09 18:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Antibody',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'antibody',
            },
        ),
        migrations.CreateModel(
            name='Antigen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'antigen',
            },
        ),
        migrations.CreateModel(
            name='BindingAffinity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affinity', models.FloatField()),
                ('antibody', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Antibody')),
                ('antigen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Antigen')),
            ],
            options={
                'db_table': 'binding_affinity',
            },
        ),
        migrations.CreateModel(
            name='CDRClust',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('CH', 'Cohthia'), ('KB', 'Kabat'), ('CN', 'Contact'), ('NA', 'N/A')], default='NA', max_length=2)),
                ('type', models.CharField(choices=[('H1', 'H1'), ('H2', 'H2'), ('H3', 'H3'), ('L1', 'L1'), ('L2', 'L2'), ('L3', 'L3'), ('NA', 'N/A')], default='NA', max_length=2)),
            ],
            options={
                'db_table': 'cdr_cluster',
            },
        ),
        migrations.CreateModel(
            name='CDRH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'cdr_heavy',
            },
        ),
        migrations.CreateModel(
            name='CDRL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'cdr_light',
            },
        ),
        migrations.CreateModel(
            name='CDRPair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heavy_cdr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.CDRH')),
                ('light_cdr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.CDRL')),
            ],
            options={
                'db_table': 'cdr_pair',
            },
        ),
        migrations.CreateModel(
            name='HeavyChain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('antibody', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Antibody')),
            ],
            options={
                'db_table': 'heavy_chain',
            },
        ),
        migrations.CreateModel(
            name='HeavyConserved',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heavy_chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.HeavyChain')),
            ],
            options={
                'db_table': 'heavy_conserved',
            },
        ),
        migrations.CreateModel(
            name='HeavyVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heavy_chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.HeavyChain')),
            ],
            options={
                'db_table': 'heavy_variable',
            },
        ),
        migrations.CreateModel(
            name='LightChain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('N', 'N/A'), ('K', 'kappa'), ('L', 'lambda')], default='N', max_length=1)),
                ('antibody', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Antibody')),
            ],
            options={
                'db_table': 'light_chain',
            },
        ),
        migrations.CreateModel(
            name='LightConserved',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('light_chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.LightChain')),
            ],
            options={
                'db_table': 'light_conserved',
            },
        ),
        migrations.CreateModel(
            name='LightVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('light_chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.LightChain')),
            ],
            options={
                'db_table': 'light_variable',
            },
        ),
        migrations.CreateModel(
            name='Methodology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Pdb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb_code', models.CharField(max_length=255, unique=True)),
                ('pdb_file', models.FileField(upload_to='pdb_files/%Y%M%d')),
                ('exp_method', models.CharField(choices=[('XRD', 'X-ray diffraction'), ('EMP', 'Electron microscopy'), ('SNM', 'Solution NMR'), ('SSH', 'Solution scattering/Homology modelling'), ('EMH', 'Electron microscopy/Homology modelling'), ('SSC', 'Solution scattering'), ('SSN', 'Solution-state NMR'), ('SSM', 'Solution-state NMR/Homology modelling'), ('N/A', 'N/A')], default='N/A', max_length=3)),
                ('organism', models.CharField(blank=True, max_length=225, null=True)),
                ('resolution', models.FloatField(blank=True, null=True)),
                ('r_factor', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdb',
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'sequence',
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('structure_file', models.FileField(upload_to='structure_files/%Y%M%d')),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Sequence')),
            ],
            options={
                'db_table': 'structure',
            },
        ),
        migrations.AddField(
            model_name='lightvariable',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='lightconserved',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='lightchain',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='heavyvariable',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='heavyconserved',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='heavychain',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='cdrl',
            name='light_variable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.LightVariable'),
        ),
        migrations.AddField(
            model_name='cdrl',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='cdrh',
            name='heavy_variable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.HeavyVariable'),
        ),
        migrations.AddField(
            model_name='cdrh',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='cdrclust',
            name='pair',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.CDRPair'),
        ),
        migrations.AddField(
            model_name='antigen',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AddField(
            model_name='antibody',
            name='antigen',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='antidb.Antigen'),
        ),
        migrations.AddField(
            model_name='antibody',
            name='pdb_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Pdb'),
        ),
        migrations.AddField(
            model_name='antibody',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='antidb.Structure'),
        ),
        migrations.AlterUniqueTogether(
            name='bindingaffinity',
            unique_together={('antibody', 'antigen')},
        ),
    ]
